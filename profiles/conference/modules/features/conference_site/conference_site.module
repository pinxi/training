<?php

include_once('conference_site.features.inc');

/**
 * Conference registration status.
 */
define('CONFERENCE_STATUS_OPEN', 1);
define('CONFERENCE_STATUS_CLOSED', 0);

/**
 * Implementation of hook_init().
 */
function conference_site_init() {
  drupal_add_css(drupal_get_path('module', 'conference_site') .'/conference_site.css');
}

/**
 * Implementation of hook_node_form_sidebar()
 */
function conference_site_node_form_sidebar(&$form, &$form_state) {
  return array(
    'menu',
    'revision_information',
    'path',
    'author',
    'comment_settings',
    'options',
  );
}

/**
 * Implementation of hook_theme()
 */
function conference_site_theme() {
  return array(
    'conference_site_footer' => array(
      'arguments' => array('logos' => NULL),
    ),
  );
}

/**
 * Implementation of hook_perm().
 */
function conference_site_perm() {
  return array('administer appearance', 'administer conference');
}

/**
 * Implementation of hook_menu().
 */
function conference_site_menu() {
  $items = array();

  $items['admin/appearance'] = array(
    'title' => 'Website appearance',
    'description' => 'Change the appearance of the website.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('conference_site_appearance', NULL),
    'access arguments' => array('administer appearance'),
  );
  $items['admin/conference'] = array(
    'title' => 'Conference settings',
    'description' => 'Administer conference settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('conference_site_settings'),
    'access arguments' => array('administer conference'),
  );
  return $items;
}


/**
 * Form callback: administer designkit settings.
 */
function conference_site_appearance() {
  $form = array();
  
  $form['buttons']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save configuration'),
  );
  $form['buttons']['reset'] = array(
    '#type' => 'submit',
    '#value' => t('Reset to defaults'),
  );
  return $form;
}

/**
 * Implementation of hook_form_HOOK_alter()
 */
function conference_site_form_conference_site_appearance_alter(&$form, &$form_state) {
  designkit_form_system_theme_settings_alter($form, $form_state);
}

/**
 * Form callback: administer conference settings.
 */
function conference_site_settings() {
  $form = array();
  $form['conference_status'] = array(
    '#type' => 'checkbox',
    '#title' => t('Open registration'),
    '#default_value' => variable_get('conference_status', CONFERENCE_STATUS_CLOSED),
    '#description' => t('Opening the registration will show a direct link on the homepage.'),
  );

  $form['site_footer'] = array(
    '#type' => 'textarea',
    '#title' => t('Footer message'),
    '#default_value' => variable_get('site_footer', ''),
  );

  return system_settings_form($form);
}
